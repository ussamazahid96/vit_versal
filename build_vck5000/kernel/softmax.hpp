#include <ap_int.h>
#include <hls_math.h>
#include <hls_stream.h>
#include "hls_exp_apfixed.h"
#include "hls_half.h"

#define TOKENS 197
#define TOKENS_PADDED 256
#define DATA_TYPE 32
#define PADDED_SIZE TOKENS_PADDED*TOKENS_PADDED
#define AXI_WIDTH 32

typedef ap_fixed<16,8, AP_RND, AP_SAT> datatype;
const float SQRT_DIM = 8.0;


void softmax(ap_uint<AXI_WIDTH> *in, ap_uint<AXI_WIDTH> *out, int batch);


const datatype exp_table[256] = {
		1.0000000000000000,
		0.9392089843750000,
		0.8820800781250000,
		0.8284301757812500,
		0.7780151367187500,
		0.7307128906250000,
		0.6862792968750000,
		0.6445312500000000,
		0.6053466796875000,
		0.5685424804687500,
		0.5339355468750000,
		0.5014648437500000,
		0.4710083007812500,
		0.4423217773437500,
		0.4154052734375000,
		0.3901977539062500,
		0.3664550781250000,
		0.3441772460937500,
		0.3232421875000000,
		0.3035888671875000,
		0.2850952148437500,
		0.2677612304687500,
		0.2514648437500000,
		0.2362060546875000,
		0.2218017578125000,
		0.2083129882812500,
		0.1956787109375000,
		0.1837768554687500,
		0.1726074218750000,
		0.1621093750000000,
		0.1522216796875000,
		0.1429443359375000,
		0.1342773437500000,
		0.1260986328125000,
		0.1184692382812500,
		0.1112670898437500,
		0.1044921875000000,
		0.0981445312500000,
		0.0921630859375000,
		0.0865478515625000,
		0.0812988281250000,
		0.0763549804687500,
		0.0717163085937500,
		0.0673217773437500,
		0.0632324218750000,
		0.0593872070312500,
		0.0557861328125000,
		0.0523681640625000,
		0.0491943359375000,
		0.0462036132812500,
		0.0433959960937500,
		0.0407714843750000,
		0.0382690429687500,
		0.0359497070312500,
		0.0337524414062500,
		0.0317382812500000,
		0.0297851562500000,
		0.0279541015625000,
		0.0262451171875000,
		0.0246582031250000,
		0.0231933593750000,
		0.0217895507812500,
		0.0204467773437500,
		0.0192260742187500,
		0.0180053710937500,
		0.0169067382812500,
		0.0159301757812500,
		0.0149536132812500,
		0.0140380859375000,
		0.0131835937500000,
		0.0123901367187500,
		0.0115966796875000,
		0.0109252929687500,
		0.0102539062500000,
		0.0096435546875000,
		0.0090332031250000,
		0.0084838867187500,
		0.0079956054687500,
		0.0075073242187500,
		0.0070190429687500,
		0.0065917968750000,
		0.0062255859375000,
		0.0057983398437500,
		0.0054931640625000,
		0.0051269531250000,
		0.0048217773437500,
		0.0045166015625000,
		0.0042724609375000,
		0.0040283203125000,
		0.0037841796875000,
		0.0035400390625000,
		0.0032958984375000,
		0.0031127929687500,
		0.0029296875000000,
		0.0027465820312500,
		0.0025634765625000,
		0.0024414062500000,
		0.0022583007812500,
		0.0021362304687500,
		0.0020141601562500,
		0.0018920898437500,
		0.0017700195312500,
		0.0016479492187500,
		0.0015869140625000,
		0.0014648437500000,
		0.0014038085937500,
		0.0012817382812500,
		0.0012207031250000,
		0.0011596679687500,
		0.0010986328125000,
		0.0009765625000000,
		0.0009155273437500,
		0.0009155273437500,
		0.0008544921875000,
		0.0007934570312500,
		0.0007324218750000,
		0.0006713867187500,
		0.0006713867187500,
		0.0006103515625000,
		0.0005493164062500,
		0.0005493164062500,
		0.0004882812500000,
		0.0004882812500000,
		0.0004272460937500,
		0.0004272460937500,
		0.0003662109375000,
		0.0003662109375000,
		0.0003662109375000,
		0.0003051757812500,
		0.0003051757812500,
		0.0003051757812500,
		0.0002441406250000,
		0.0002441406250000,
		0.0002441406250000,
		0.0002441406250000,
		0.0001831054687500,
		0.0001831054687500,
		0.0001831054687500,
		0.0001831054687500,
		0.0001831054687500,
		0.0001831054687500,
		0.0001220703125000,
		0.0001220703125000,
		0.0001220703125000,
		0.0001220703125000,
		0.0001220703125000,
		0.0001220703125000,
		0.0001220703125000,
		0.0001220703125000,
		0.0000610351562500,
		0.0000610351562500,
		0.0000610351562500,
		0.0000610351562500,
		0.0000610351562500,
		0.0000610351562500,
		0.0000610351562500,
		0.0000610351562500,
		0.0000610351562500,
		0.0000610351562500,
		0.0000610351562500,
		0.0000610351562500,
		0.0000610351562500,
		0.0000610351562500,
		0.0000610351562500,
		0.0000610351562500,
		0.0000610351562500,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
		0.0000000000000000,
};
















